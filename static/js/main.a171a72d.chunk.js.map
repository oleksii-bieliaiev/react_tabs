{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","handleTabSelect","isTabSelected","className","map","classNames","href","onClick","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAGhEO,EAAkB,SAACF,IAFH,SAACA,GAAD,OAAcF,EAAWG,KAAOD,EAAIC,IAGpDE,CAAcH,IAIlBH,EAAcG,IAGhB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,oBAEEI,UAAWE,IAAW,CACpB,YAAaN,EAAIC,KAAOH,EAAWG,KAErC,UAAQ,MALV,SAOE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAAMN,EAAgBF,IAHjC,SAKGA,EAAIS,SAXFT,EAAIC,WAkBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGN,EAAWY,cCjDPf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOkB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAS,EAAYJ,SAEf,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeiB,EAAYZ,GAC3BJ,cAAeiB,QCtBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a171a72d.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (object: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const isTabSelected = (tab: Tab) => currentTab.id === tab.id;\n\n  const handleTabSelect = (tab: Tab) => {\n    if (isTabSelected(tab)) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': tab.id === currentTab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}